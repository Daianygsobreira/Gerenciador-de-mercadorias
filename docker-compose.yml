version: '3.4'

services:
  backend_api:
    image: backend_api
    container_name: supplychain_backend_api
    build:
      context: .
      dockerfile: ./dockerfile_backend_api
    #command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m flask run --no-debugger --no-reload --host 0.0.0.0 --port 5000"]
    #command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --listen 0.0.0.0:5678 -m flask run --no-debugger --no-reload --host 0.0.0.0 --port 5000"]
    command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --listen 0.0.0.0:5678 -m flask run --host 0.0.0.0 --port 5000"]
    links:
      - db:supplychain.db
    depends_on:
      - db
    ports: 
      - "5000:5000"
      - "5678:5678"
    networks:
      - internal
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./backend_api:/app

  db:
    container_name: supplychain_db
    image: mysql:8.0.33
    ports:
      - "5001:3306"
    networks:
      - internal
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./db/mysql_data:/var/lib/mysql
      - ./db/create-database.sql:/docker-entrypoint-initdb.d/init-script.sql

  
  frontend_web:
    image: frontend_web
    container_name: supplychain_frontend_web
    build:
      context: .
      dockerfile: ./dockerfile_frontend_webclient
    links:
      - backend_api:supplychain.backend.api
    depends_on:
      - backend_api
    ports:
      - "3000:3000"
    networks:
      - internal
    volumes:
      - ./frontend_webclient/public:/react-app/public
      - ./frontend_webclient/src:/react-app/src

networks:
  internal:
    driver: bridge
