## For more information, please refer to https://aka.ms/vscode-docker-python
#FROM python:3.10-slim
#EXPOSE 5000
## Keeps Python from generating .pyc files in the container
#ENV PYTHONDONTWRITEBYTECODE=1
## Turns off buffering for easier container logging
#ENV PYTHONUNBUFFERED=1
## Install pip requirements
#COPY ./backend_api/requirements.txt .
#RUN python -m pip install -r requirements.txt
#WORKDIR /app
#COPY ./backend_api/. /app
## Creates a non-root user with an explicit UID and adds permission to access the /app folder
## For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
#RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
#USER appuser
## During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug
#CMD ["gunicorn", "--bind", "0.0.0.0:5000", "app:app"]
#

FROM python:3.8
WORKDIR /app
COPY ./backend_api/. .
RUN pip install --no-cache-dir -r requirements.txt
#EXPOSE 5000
#EXPOSE 5678
#CMD ["python", "app.py"]
CMD ["flask", "--app", "app.py", "--debug", "run"]




#FROM python:3.8
#WORKDIR /app
#COPY * /app/
#RUN pip install -r requirements.txt
## Comando para utilizar o debugpy na app
## CMD python3 -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m flask run --host=0.0.0.0 --port 80
#CMD python3 app.py
